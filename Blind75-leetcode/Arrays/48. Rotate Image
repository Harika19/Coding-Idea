// took new array and solved it


var transpose = function(matrix){
  const res = Array.from({length: matrix[0].length}, ()=> new Array(matrix.length).fill(0));
  
   for(let r=0;r<matrix.length;r++){
    for(let c=0;c<matrix[0].length;c++){
      res[c][r] = matrix[r][c]
    }
  }
  console.log(res)
  return res;
  
}


var rotate = function(matrix) {
    let updated = transpose(matrix);
  console.log(updated)
  for(let row of updated){
    console.log('row', row)
    row.reverse()
  }
  return updated
};

console.log(rotate([[1,2,3],[4,5,6]]))



// altered existing array itself - correct

/**
 * @param {number[][]} matrix
 * @return {void} Do not return anything, modify matrix in-place instead.
 */



var rotate = function(matrix) {
  for(let r=0; r< matrix.length; r++){
    for(let c= r; c<matrix[0].length; c++){
      //swap -> transpose
       [matrix[r][c], matrix[c][r]] = [matrix[c][r], matrix[r][c]]
    }
  }

  for(let row of matrix){
    row.reverse()
  }
  
};

